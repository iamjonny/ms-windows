C:\Dev\Sonic-Pi\app>win-build-all.bat

C:\Dev\Sonic-Pi\app>set WORKING_DIR=C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>set CONFIG=

C:\Dev\Sonic-Pi\app>if /I "" == "" (set CONFIG=Release )

C:\Dev\Sonic-Pi\app>call win-prebuild.bat

C:\Dev\Sonic-Pi\app>set WORKING_DIR=C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>cd C:\Dev\Sonic-Pi\app\

C:\Dev\Sonic-Pi\app>call win-pre-vcpkg.bat

C:\Dev\Sonic-Pi\app>set WORKING_DIR=C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>cd C:\Dev\Sonic-Pi\app\

C:\Dev\Sonic-Pi\app>REM Build vcpkg

C:\Dev\Sonic-Pi\app>if not exist "vcpkg\" (
echo Cloning vcpkg
 git clone --depth 1 --branch 2022.11.14 https://github.com/microsoft/vcpkg.git vcpkg
)

C:\Dev\Sonic-Pi\app>set VCPKG_ROOT=C:\Dev\Sonic-Pi\app\\vcpkg

C:\Dev\Sonic-Pi\app>if not exist "vcpkg\vcpkg.exe" (
cd vcpkg
 echo Building vcpkg
 call bootstrap-vcpkg.bat -disableMetrics
 cd C:\Dev\Sonic-Pi\app\
)

C:\Dev\Sonic-Pi\app>cd vcpkg
Installing Libraries

C:\Dev\Sonic-Pi\app\vcpkg>vcpkg install  kissfft fmt crossguid sdl2 gl3w reproc gsl-lite concurrentqueue platform-folders catch2 --triplet x64-windows-static-md --recurse
Computing installation plan...
The following packages will be built and installed:
    catch2[core]:x64-windows-static-md -> 3.1.1#2
    concurrentqueue[core]:x64-windows-static-md -> 1.0.3
    crossguid[core]:x64-windows-static-md -> 2021-10-22#2
  * egl-registry[core]:x64-windows-static-md -> 2021-11-23#1
    fmt[core]:x64-windows-static-md -> 9.1.0
    gl3w[core]:x64-windows-static-md -> 2018-05-31#4
    gsl-lite[core]:x64-windows-static-md -> 0.40.0
    kissfft[core]:x64-windows-static-md -> 2021-11-14
  * opengl-registry[core]:x64-windows-static-md -> 2021-11-17
    platform-folders[core]:x64-windows-static-md -> 4.1.0
    reproc[core]:x64-windows-static-md -> 14.2.4#1
    sdl2[core]:x64-windows-static-md -> 2.24.2
Additional packages (*) will be modified to complete this operation.
Detecting compiler hash for triplet x64-windows-static-md...
Restored 0 package(s) from C:\Users\Jonny\AppData\Local\vcpkg\archives in 1.357 ms. Use --debug to see more details.
Installing 1/12 catch2:x64-windows-static-md...
Building catch2[core]:x64-windows-static-md...
warning: -- Using community triplet x64-windows-static-md. This triplet configuration is not guaranteed to succeed.
-- [COMMUNITY] Loading triplet configuration from: C:\Dev\Sonic-Pi\app\vcpkg\triplets\community\x64-windows-static-md.cmake
-- Using cached catchorg-Catch2-v3.1.1.tar.gz.
-- Cleaning sources at C:/Dev/Sonic-Pi/app/vcpkg/buildtrees/catch2/src/v3.1.1-75a9114e59.clean. Use --editable to skip cleaning for the packages you specify.
-- Extracting source C:/Dev/Sonic-Pi/app/vcpkg/downloads/catchorg-Catch2-v3.1.1.tar.gz
-- Applying patch fix-install-path.patch
-- Applying patch no-absolute-paths.patch
-- Using source at C:/Dev/Sonic-Pi/app/vcpkg/buildtrees/catch2/src/v3.1.1-75a9114e59.clean
-- Configuring x64-windows-static-md
-- Building x64-windows-static-md-dbg
-- Building x64-windows-static-md-rel
-- Fixing pkgconfig file: C:/Dev/Sonic-Pi/app/vcpkg/packages/catch2_x64-windows-static-md/lib/pkgconfig/catch2-with-main.pc
-- Fixing pkgconfig file: C:/Dev/Sonic-Pi/app/vcpkg/packages/catch2_x64-windows-static-md/lib/pkgconfig/catch2.pc
-- Using cached msys-mingw-w64-i686-pkg-config-0.29.2-3-any.pkg.tar.zst.
-- Downloading https://repo.msys2.org/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst;https://www2.futureware.at/~nickoe/msys2-mirror/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst;https://mirror.yandex.ru/mirrors/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst;https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst;https://mirrors.ustc.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst;https://mirror.bit.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst;https://mirror.selfnet.de/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst;https://mirrors.sjtug.sjtu.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst -> msys-mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst...
[DEBUG] To include the environment variables in debug output, pass --debug-env
[DEBUG] Feature flag 'binarycaching' unset
[DEBUG] Feature flag 'compilertracking' unset
[DEBUG] Feature flag 'registries' unset
[DEBUG] Feature flag 'versions' unset
Downloading https://repo.msys2.org/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst
Downloading https://www2.futureware.at/~nickoe/msys2-mirror/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst
Downloading https://mirror.yandex.ru/mirrors/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst
Downloading https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst
Downloading https://mirrors.ustc.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst
Downloading https://mirror.bit.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst
Download failed -- retrying after 1000ms.Download failed -- retrying after 2000ms.Download failed -- retrying after 4000ms.Downloading https://mirror.selfnet.de/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst
Downloading https://mirrors.sjtug.sjtu.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst
error: Failed to download from mirror set
error: https://repo.msys2.org/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: failed: status code 404
https://www2.futureware.at/~nickoe/msys2-mirror/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: failed: status code 404
https://mirror.yandex.ru/mirrors/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: failed: status code 404
https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: failed: status code 404
https://mirrors.ustc.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: failed: status code 404
https://mirror.bit.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: WinHttpSendRequest() failed: 12007
https://mirror.bit.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: WinHttpSendRequest() failed: 12007
https://mirror.bit.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: WinHttpSendRequest() failed: 12007
https://mirror.bit.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: WinHttpSendRequest() failed: 12007
https://mirror.selfnet.de/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: failed: status code 404
https://mirrors.sjtug.sjtu.edu.cn/msys2/mingw/i686/mingw-w64-i686-libwinpthread-git-9.0.0.6373.5be8fcd83-1-any.pkg.tar.zst: failed: status code 404

[DEBUG] D:\a\_work\1\s\src\vcpkg\base\downloads.cpp(774):
[DEBUG] Time in subprocesses: 0 us
[DEBUG] Time in parsing JSON: 19 us
[DEBUG] Time in JSON reader: 0 us
[DEBUG] Time in filesystem: 7323 us
[DEBUG] Time in loading ports: 0 us
[DEBUG] Exiting after 36.6 s (36598089 us)

CMake Error at scripts/cmake/vcpkg_download_distfile.cmake:32 (message):

      Failed to download file with error: 1
      If you use a proxy, please check your proxy setting. Possible causes are:

      1. You are actually using an HTTP proxy, but setting HTTPS_PROXY variable
         to `https://address:port`. This is not correct, because `https://` prefix
         claims the proxy is an HTTPS proxy, while your proxy (v2ray, shadowsocksr
         , etc..) is an HTTP proxy. Try setting `http://address:port` to both
         HTTP_PROXY and HTTPS_PROXY instead.

      2. You are using Fiddler. Currently a bug (https://github.com/microsoft/vcpkg/issues/17752)
         will set HTTPS_PROXY to `https://fiddler_address:port` which lead to problem 1 above.
         Workaround is open Windows 10 Settings App, and search for Proxy Configuration page,
         Change `http=address:port;https=address:port` to `address`, and fill the port number.

      3. Your proxy's remote server is out of service.

      In future vcpkg releases, if you are using Windows, you no longer need to set
      HTTP(S)_PROXY environment variables. Vcpkg will simply apply Windows IE Proxy
      Settings set by your proxy software. See (https://github.com/microsoft/vcpkg-tool/pull/49)
      and (https://github.com/microsoft/vcpkg-tool/pull/77)

      Otherwise, please submit an issue at https://github.com/Microsoft/vcpkg/issues

Call Stack (most recent call first):
  scripts/cmake/vcpkg_download_distfile.cmake:273 (z_vcpkg_download_distfile_show_proxy_and_fail)
  scripts/cmake/vcpkg_acquire_msys.cmake:26 (vcpkg_download_distfile)
  scripts/cmake/vcpkg_acquire_msys.cmake:124 (z_vcpkg_acquire_msys_download_package)
  scripts/cmake/vcpkg_find_acquire_program.cmake:535 (vcpkg_acquire_msys)
  scripts/cmake/vcpkg_fixup_pkgconfig.cmake:151 (vcpkg_find_acquire_program)
  ports/catch2/portfile.cmake:26 (vcpkg_fixup_pkgconfig)
  scripts/ports.cmake:147 (include)


error: building catch2:x64-windows-static-md failed with: BUILD_FAILED
error: Please ensure you're using the latest port files with `git pull` and `vcpkg update`.
Then check for known issues at:
    https://github.com/microsoft/vcpkg/issues?q=is%3Aissue+is%3Aopen+in%3Atitle+catch2
You can submit a new issue at:
    https://github.com/microsoft/vcpkg/issues/new?template=report-package-build-failure.md&title=[catch2]+Build+error
Include '[catch2] Build error' in your bug report title, the following version information in your bug description, and attach any relevant failure logs from above.
    vcpkg-tool version: 2022-11-10-5fdee72bc1fceca198fb1ab7589837206a8b81ba
    vcpkg-scripts version: 6f7ffeb 2022-11-11 (1 year, 3 months ago)


Please use the prefilled template from C:\Dev\Sonic-Pi\app\vcpkg\installed\vcpkg\issue_body.md when reporting your issue.

C:\Dev\Sonic-Pi\app\vcpkg># libsndfile[ore,external-libs]
'#' is not recognized as an internal or external command,
operable program or batch file.

C:\Dev\Sonic-Pi\app\vcpkg>cd C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>#call win-pre-translations.bat
'#call' is not recognized as an internal or external command,
operable program or batch file.

C:\Dev\Sonic-Pi\app>cd C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>call win-config.bat Release

C:\Dev\Sonic-Pi\app>set WORKING_DIR=C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>set CONFIG=Release

C:\Dev\Sonic-Pi\app>cd C:\Dev\Sonic-Pi\app\

C:\Dev\Sonic-Pi\app>if /I "Release" == "" (set CONFIG=Release )
"Creating build directory... for Release build"

C:\Dev\Sonic-Pi\app>mkdir build  1>nul
A subdirectory or file build already exists.
"Generating project files..."

C:\Dev\Sonic-Pi\app>cd build

C:\Dev\Sonic-Pi\app\build>cmake -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release ..\
-- CMakeLists: Sonic Pi
-- Selecting Windows SDK version 10.0.22621.0 to target Windows 10.0.22631.
-- TARGET_WIN
-- System: Windows-10.0.22631
-- Compiler: MSVC
-- Compiler Version: 19.38.33134.0
-- Debug Flags: /MDd /Zi /Ob0 /Od /RTC1 -D_DEBUG -DDEBUG
-- Release Flags: /MD /O2 /Ob2 /DNDEBUG
-- Externals Builder
-- USE_SYSTEM_LIBS: OFF
CMake Error at vcpkg/scripts/buildsystems/vcpkg.cmake:834 (_find_package):
  Could not find a package configuration file provided by "SndFile" with any
  of the following names:

    SndFileConfig.cmake
    sndfile-config.cmake

  Add the installation prefix of "SndFile" to CMAKE_PREFIX_PATH or set
  "SndFile_DIR" to a directory containing one of the above files.  If
  "SndFile" provides a separate development package or SDK, be sure it has
  been installed.
Call Stack (most recent call first):
  external/CMakeLists.txt:40 (find_package)


-- Configuring incomplete, errors occurred!

C:\Dev\Sonic-Pi\app\build>cd C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>call win-build-gui.bat Release

C:\Dev\Sonic-Pi\app>set WORKING_DIR=C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>set CONFIG=Release

C:\Dev\Sonic-Pi\app>if /I "Release" == "" (set CONFIG=Release )

C:\Dev\Sonic-Pi\app>cd C:\Dev\Sonic-Pi\app\

C:\Dev\Sonic-Pi\app>cd build

C:\Dev\Sonic-Pi\app\build>cmake --build . --config Release
MSBuild version 17.8.5+b5265ef37 for .NET Framework
MSBUILD : error MSB1009: Project file does not exist.
Switch: ALL_BUILD.vcxproj

C:\Dev\Sonic-Pi\app\build>cd C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>call win-post-tau-prod-release.bat

C:\Dev\Sonic-Pi\app>set WORKING_DIR=C:\Dev\Sonic-Pi\app

C:\Dev\Sonic-Pi\app>cd C:\Dev\Sonic-Pi\app\
Compiling Erlang/Elixir files...

C:\Dev\Sonic-Pi\app>cd C:\Dev\Sonic-Pi\app\\server\beam\tau

C:\Dev\Sonic-Pi\app\server\beam\tau>set MIX_ENV=prod

C:\Dev\Sonic-Pi\app\server\beam\tau>cmd /c mix tau.release
* creating c:/Users/Jonny/.mix/archives/hex-2.0.6
* creating c:/Users/Jonny/.mix/elixir/1-16/rebar3
Resolving Hex dependencies...
Resolution completed in 0.402s
Unchanged:
  bunt 0.2.1
  castore 1.0.3
  cowboy 2.10.0
  cowboy_telemetry 0.4.0
  cowlib 2.12.1
  credo 1.7.0
  decimal 2.1.1
  ecto 3.10.2
  esbuild 0.7.1
  expo 0.4.1
  exsync 0.2.4
  file_system 0.2.10
  floki 0.34.3
  gettext 0.22.2
  heroicons 0.5.3
  jason 1.4.0
  logger_file_backend 0.0.13
  mime 2.0.5
  petal_components 1.2.9
  phoenix 1.7.6
  phoenix_ecto 4.4.2
  phoenix_html 3.3.1
  phoenix_live_dashboard 0.7.2
  phoenix_live_reload 1.4.1
  phoenix_live_view 0.18.18
  phoenix_pubsub 2.1.3
  phoenix_template 1.0.1
  plug 1.14.2
  plug_cowboy 2.6.1
  plug_crypto 1.2.5
  ranch 1.8.0
  rustler 0.29.0
  tailwind 0.2.1
  telemetry 1.2.1
  telemetry_metrics 0.6.1
  telemetry_poller 1.0.0
  toml 0.7.0
  websock 0.5.2
  websock_adapter 0.5.3
All dependencies are up to date

11:01:16.611 [debug] Downloading tailwind from https://github.com/tailwindlabs/tailwindcss/releases/download/v3.3.2/tailwindcss-windows-x64.exe
** (RuntimeError) Couldn't fetch https://github.com/tailwindlabs/tailwindcss/releases/download/v3.3.2/tailwindcss-windows-x64.exe: {:error, {:failed_connect, [{:to_address, {~c"github.com", 443}}, {:inet, [:inet], {:options, {:cacertfile, ~c"c:/Dev/Sonic-Pi/app/server/beam/tau/_build/prod/lib/castore/priv/cacerts.pem", {:error, :enoent}}}}]}}

This typically means we cannot reach the source or you are behind a proxy.
You can try again later and, if that does not work, you might:

  1. If behind a proxy, ensure your proxy is configured and that
     your certificates are set via the cacerts_path configuration

  2. Manually download the executable from the URL above and
     place it inside "_build/tailwind-windows-x64.exe"

  3. Install and use Tailwind from npmJS. See our module documentation
     to learn more: https://hexdocs.pm/tailwind

    (tailwind 0.2.1) lib/tailwind.ex:303: Tailwind.fetch_body!/1
    (tailwind 0.2.1) lib/tailwind.ex:224: Tailwind.install/1
    (mix 1.16.1) lib/mix/task.ex:478: anonymous fn/3 in Mix.Task.run_task/5
    (mix 1.16.1) lib/mix/task.ex:544: Mix.Task.run_alias/6
    (mix 1.16.1) lib/mix/cli.ex:96: Mix.CLI.run_task/2
    c:/Dev/Elixir/bin/mix:2: (file)
